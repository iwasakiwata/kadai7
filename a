public interface Aggregate {
	public Iterator createIterator();
}
//ゲームクラス
public class Game {
	//名前と値段
	private String name;
	private int price;

	//コンストラクタ
	public Game(String name,int price) {
		this.name = name;
		this.price = price;
	}

	//名称を取得
	public String getName() {
		return name;
	}

	//価格を取得
	public int getPrice() {
		return price;
	}

}
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

class GameListAggregate implements Aggregate{
	//private Game[] list = new Game[20];
	private List<Game> list = new ArrayList<Game>();
	private int numberOfStock;

	@Override
	public Iterator createIterator() {
		return new GameListIterator(this);
	}


	public void add(Game game) {
		//list[numberOfStock] = game;
		//numberOfStock += 1;
		list.add(game);
		numberOfStock += 1;
	}

	public Object getAt(int number) {
		//return list[number];
		return list.get(number);
	}

	public int getNumberOfStock() {
		return numberOfStock;
	}

	public void sortlist() {
		list.sort(Comparator.comparing(Game::getPrice));
	}
}
public class GameListIterator implements Iterator{
	private GameListAggregate aggregate;
	private int current;

	public GameListIterator(GameListAggregate aggregate) {
		this.aggregate = aggregate;
	}

	@Override
	public void first() {
		current = 0;
		//aggregate.sortlist();
	}

	@Override
	public void next() {
		current += 1;
	}

	@Override
	public boolean isDone() {
		if(current >= aggregate.getNumberOfStock()) {
			return true;
		} else {
			return false;
		}

	}

	@Override
	public Object getItem() {
		return aggregate.getAt(current);
	}
}
interface Iterator {
	public void first();
	public void next();
	public boolean isDone();
	public Object getItem();
}
public class IteratorTest {
	public static void main(String[] args) {
		GameListAggregate gameListAggregate = new GameListAggregate();
		Iterator iterator = gameListAggregate.createIterator();
		gameListAggregate.add(new Game("みんなでゴルフ", 3700));
		gameListAggregate.add(new Game("ファイナルファンタジア", 7300));
		gameListAggregate.add(new Game("ロケットモンスター", 5400));
		gameListAggregate.add(new Game("さいころの達人", 5200));

		iterator.first();

		gameListAggregate.sortlist();

		while(!iterator.isDone()) {
			Game game = (Game)iterator.getItem();
			System.out.println(game.getName());
			iterator.next();
		}
	}
}
